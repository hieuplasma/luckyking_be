// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../ERD.png"
}

model User {
  // @@map("users") //users is table's name in postgres SQL
  id             String   @id @default(uuid())
  phoneNumber    String   @unique
  hashedPassword String
  fullName       String?
  createdAt      DateTime @default(now())
  updateAt       DateTime @updatedAt
  email          String?
  address        String?
  identify       String?
  balance        Int      @default(0)
  status         String   @default("active")
  role           String   @default("user") // Admin, User
  avatar         String? // Link anh
  personNumber   Int? // Ma alias ca nhan

  Device       Device[]
  Lottery      Lottery[]
  Transaction  Transaction[]
  Order        Order[]
  Cart         Cart?
  MoneyAccount MoneyAccount?
  RewardWallet RewardWallet?
}

model Device {
  id        String   @id @default(uuid())
  deviceId  String
  lastLogin DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Lottery {
  id            String        @id @default(uuid())
  type          String // Cac loai ve Vietlot
  // detail     Json // detail dang {number:[[3,4,5,...],[6,7,8,...],[30],...], description: ve bao 4 bac 10 }
  buyTime       DateTime      @default(now())
  resultTime    DateTime
  deleteTime    DateTime?
  bets          Int // tien dat cuoc
  totalMoney    Int // Tong gia tien
  benefits      Int // tien an duoc
  status        String // ve dang cho kq, ve dan trung, ve da truot, ve da huy
  imageFront    String? // Link anh ve ma truoc
  imageback     String // Link anh ve mat sau
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  Order         Order?        @relation(fields: [orderId], references: [id])
  orderId       String?
  Cart          Cart?         @relation(fields: [cartId], references: [id])
  cartId        String?
  NumberLottery NumberLotery?
  periodCode    String // Mã kỳ quay
  periodTime    DateTime // Thời gian quay
  bonusStatus   Boolean // Trạng thái so thưởng
}

model Cart {
  id      String    @id @default(uuid())
  User    User      @relation(fields: [userId], references: [id])
  userId  String    @unique
  Lottery Lottery[]
}

// Lich su giao dich, bien dong so du, lich su thang, thua se dung api rut gon cua lich su giao dich
model Transaction {
  id                  String   @id @default(uuid())
  type                String // nap tien, rut tien, nhan thuong
  description         String   @default("")
  amount              Int      @default(0) // so tien 
  payment             String   @default("") // Hinh thuc thanh toan
  User                User     @relation(fields: [userId], references: [id])
  userId              String
  createAt            DateTime @default(now())
  source              String? // Mo ta nguon
  destination         String? // Mo ta dich den
  transactionPersonId String? // UserId cua nguoi thuc hien giao dich (admin)
}

// Lich su mua hang: mua ve, tra ve
model Order {
  id                String    @id @default(uuid())
  amount            Int // So tien
  user              User      @relation(fields: [userId], references: [id])
  userId            String
  description       String?
  Lottery           Lottery[]
  statusDescription String?
  status            String // da mua thanh cong, dang xu ly, da huy
  creataAt          DateTime
  confirmAt         DateTime?
  confirmBy         String? // ma diem ban hang - account ban hang
  confrimByStaff    String?
  payment           String? //hinh thuc thanh tonan
  tradingCode       String // ma giao dich
  surcharge         Int // phu phi
  dataPart          String // 20230316 ngay dat don hang
  rewardStatus      String // Trang thai tra thuong
}

model MoneyAccount {
  id         String  @id @default(uuid())
  name       String? @default("Ví LuckyKing") // ten money account
  balance    Int     @default(0)
  decription String?
  user       User    @relation(fields: [userId], references: [id])
  userId     String  @unique
}

model RewardWallet {
  id         String  @id @default(uuid())
  name       String? @default("Ví nhận thưởng") // ten vi nhan thuong
  balance    Int     @default(0)
  decription String?
  user       User    @relation(fields: [userId], references: [id])
  userId     String  @unique
}

model NumberLotery {
  id            String  @id @default(uuid())
  Lottery       Lottery @relation(fields: [lotteryId], references: [id])
  lotteryId     String  @unique
  level         Int // bac cua ve
  numberSets    Int // số bộ số
  numberDetail  Json // {boSo:[...], tienCuoc:int}
  statusWinning String // Trung hay khong trung
}
